WoWlike仇恨系统存在的意义就是，“我要让玩家明确知道--谁是挨打者”。而不是说“谁仇恨高打谁”（不要用汉语理解）。
如果没有这个效果，便没有意义。作为玩家我必须明确地清楚规则，而不是仅仅达到语言层面的“解释得通”便可以。
比如一个纯回合制游戏，存在阵型：前后两排，每排上中下三个位置。打死中间打上面，再下面。以此类推。规则明确，就是仇恨系统。

仇恨系统最简单的模型：我是一个Boss，你是一个玩家。如果你在我xx范围之内，我就用近战技能，否则我就用远程技能。不论怎样我都要打死你。
我基于每个单位回合都完成一件事，但两个相邻回合之间的决策没有逻辑上的必然联系。
所以一个动作游戏便不可能用这种仇恨系统。

我作为动作游戏的Boss并不是由于你的存在，要揍你才是用某个动作。而是我现在能用某个动作，看能否以某个玩家作为参照点。
即“我能打谁就打谁”。
想象一下拳击比赛，是不是我直拳打完，先回到idle再选择下一个动作？肯定不是，而是立即接上一个我身体允许作出的动作。
所以动作游戏“每一帧世界都在发生变化”。

WoW中是无法体现“我能打谁就打谁”的。它的一个动作是一个单位，只要表现出“我正在干什么”就行了（所以可以只要酷炫，或者很多技能用同一个动作），不需要说明状态。
但动作游戏则不同，它的每一个动作都表达出很多信息，不光是“我正在干什么”，还有“我正处于什么样的状态”，威胁性如何，后续会有什么样的变招，破绽在哪儿，等等。

现在回到设计环节，我要设计一头熊，要打黄巾贼。那么熊的AI会怎么做？
是“熊正手耳光60帧，但第30帧可被反手耳光cancel”，还是“查询仇恨列表发现符合条件的哥们在远处，所以做完60帧动作，回到idle，再切换飞扑”。

逆转一下思维，WoW为什么需要仇恨？没有仇恨，玩家怎么知道怪物打谁？怎么做规则，怎样表现合理？
是不是发现“特定的环境下，这样的设计才有意义”？
比如仇恨系统，WoW的游戏性质决定了没有比仇恨系统更好的策略。而且仇恨系统还能成为玩家之间的一个技巧--争取坦克位置的技巧。
这在这类游戏确实是一个性质填充，但是如果没有这个性质填充的必要的游戏，还一定需要仇恨系统吗？
这叫游戏设计的智慧。

--老污：如果怪物猎人没有使用仇恨系统，那么“挑衅”这个装备技能是如何起作用的？

Me->Foes->Sort([NextActions](Guy1, Guy2)=>{
    bool AttackGuy1 = false;
    bool AttackGuy2 = false;
    NextActions.foreach((Act)=>{
        if (Act.GuyInRange(Guy1)){
            AttackGuy1 = true;
            break;
        }
    });
    ...复制黏贴上面的，改成Guy2
    return ...
});
这个就里面只要没有用到Threat，就不是仇恨系统。

--老污：挑衅和隐秘实际是更改了判断顺序？

对，return这里稍微做一下就好了。


于 2022/05/16 进行
于 2022/05/19 由 Heisenberg 整理