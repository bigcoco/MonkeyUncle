——某群友：我组长昨天让我们搞个行为树。说你们把这搞好了，以后什么arpg，moba，3a都可以用，对你们挺有好处的。 

行为树无非就是if层级深一些的代码，对于已经明确的需求来说，行为树确实好用。
比如你要仿做一个迅龙， 迅龙已经在那里了，不会变了（这点就不符合游戏开发），然后你用行为树：
  1，if结构不在代码中出现， 而是在数据（行为树）中表达。表面上使得代码漂亮。
  2，功能上实现没问题，因为需求不变了。需求要变就会有大问题。
  3，看起来工整，和沙雕们理解的管线一样。
  
行为树只是一个input环境而已。如果你的代码逻辑架构就是行为树，必定很蠢；但是反过来讲，你的代码可以支持行为树输入 （当然不可能没有转化工作） ，那么行为树当然是可以的。
我跟你说，有经验的人都会有一个需求——ai是能拼接的。行为树作为input，就很难拼接，如果你逻辑代码也是行为树（比如ue的行为树插件），基本就是蠢逼玩意儿了。
比如有一个AIClip，
  if( 发呆值>30 && 随机数(0,1)<0.7 ) 角色淌口水。
  这个AI片段施大雕有，医师也有，鲁大师工作的时候也有，但是只要玩如龙了就没有了。
想明白这个需求的根本了吗？很多时候，你的AI会发生变化。
比如鲁大师onWork，就会添加这个clip给他的aiList。但是一旦onPlayGame，这条就没了。那么鲁大师有多少个onXXX呢？不胜枚举，所以你没法说我每个onXXX指向一个行为树。因为就是onXXX还有进一步的不同，比如鲁大师生痔疮了和没有生的时候onWC就会不一样。

做AI最容易犯的一个错误，其实也跟行为树的理解有关的，但是跟刚才说的没关系。就是行为树，会被人误会为一个“脑图”，之前大白马老师不是说过吗？“行为树和脑图差不多的感觉”，他产生了这个疑惑。其实是的，因为不懂的人会把行为树当做脑图的。
什么叫行为树当做脑图？就是允许节点是一个“阶段性目标”。比如从A走到B，就是一个典型的愚蠢思想，不管是不是行为树，AI里面永远只有“我要走到C（根据A和B以及当前情况算出来的一个点）”。C可能值==B，但不会C==B。

--小猫：我又想起之前那个上厕所的论证：走到厕所，看到人，但是按照A->B的规则，不管有没有人正在上厕所，都要脱裤子撒尿。


于 2022/05/11 进行
于 2022/05/18 由 Heisenberg 整理